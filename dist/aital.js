(function(){"use strict";const C="",l=document.createElement("details");l.open=!0,l.dataset.id="aital";const w=document.createElement("summary");w.innerHTML=`
    <span>Am I Talking A Lot?</span>
    <svg xmlns="http://www.w3.org/2000/svg" width="192" height="192" fill="#000000" viewBox="0 0 256 256"><rect width="256" height="256" fill="none"></rect><polyline points="208 96 128 176 48 96" fill="none" stroke="#000000" stroke-linecap="round" stroke-linejoin="round" stroke-width="16"></polyline></svg>
    <svg xmlns="http://www.w3.org/2000/svg" width="192" height="192" fill="#000000" viewBox="0 0 256 256"><rect width="256" height="256" fill="none"></rect><polyline points="48 160 128 80 208 160" fill="none" stroke="#000000" stroke-linecap="round" stroke-linejoin="round" stroke-width="16"></polyline></svg>
  `,l.appendChild(w);const g=document.createElement("div");l.appendChild(g),document.body.appendChild(l),window.__aitalDebugMode=!1;function v(t){let[a,e]=[50,10];t.aitalPosition&&(a=t.aitalPosition.x,e=t.aitalPosition.y),l.style.left=`${a}%`,l.style.top=`${e}%`}browser.storage.sync.get("aitalPosition").then(v,t=>console.error("AITAL error: could not get position from storage"));const u={__seconds:0},f={};let s,p;function r(){window.__aitalDebugMode&&console.log("ðŸª² AITAL",...arguments,{data:u,elements:f,participants:p,indicators:s})}function y(t){const a=t.split(" ");return a.length===1?t:a.map((e,n)=>n===0?e:e[0]+".").join(" ")}function m(t){return t>=90?3:t>=75?2:t>=50?1:0}function x(){if(p=document.querySelectorAll("[data-self-name]"),p.length<=1)return;u.__seconds++,s=[],document.querySelectorAll("i.google-material-icons").forEach(e=>{if(e.textContent==="devices"){const n=e.previousSibling;if(!n){r("No previous sibling for node",e);return}n.dataset.useTooltip?s.push(n.lastChild):s.push(n)}}),s.forEach((e,n)=>{const i=p[n];if(!i){r("No matching participant for indicator",{index:n,indicators:s,node:e,participants:p});return}const o=i.textContent;o.includes("(Present")&&r("Unexpected participant: "+o,{indicators:s,participants:p}),u.hasOwnProperty(o)||(r(`Logging new participant: ${o}`),u[o]=0),e.children[1].getBoundingClientRect().height>4&&(r(`Talking: ${o}`),u[o]++)});const{__seconds:t,...a}=u;Object.entries(a).forEach(([e,n])=>{const i=n*100/t,o=i.toFixed(2);if(f[e]){r(`Update UI: ${e}`);const{progress:c,percent:d}=f[e];c.value=i,c.dataset.level=m(i),d.textContent=o}else{r(`Create UI: ${e}`);const c=document.createElement("label");c.textContent=y(e),c.title=e;const d=document.createElement("progress");d.max=100,d.value=i,d.dataset.level=m(i).toString();const h=document.createElement("span");h.textContent=o,g.appendChild(c),g.appendChild(d),g.appendChild(h),f[e]={label:c,percent:h,progress:d}}})}g.addEventListener("click",t=>{t.shiftKey&&(window.__aitalDebugMode=!window.__aitalDebugMode)}),setInterval(x,1e3)})();
